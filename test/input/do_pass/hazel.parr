let emp = nil
in

let cons = (lambda (h, t):
  (h, t))
in

let head = (lambda (l):
  l[0])
in

let tail = (lambda (l):
  l[1])
in

let isEmp = (lambda (l):
  l == emp)
in

let rec range = (lambda (i, j):
  if (i < j):
    cons(i, range(i+1, j))
  else: 
    emp)
in

let rec foldl = (lambda (f, acc, xs):
  if isEmp(xs):
    acc 
  else:
    foldl(f, f(acc, head(xs)), tail(xs)))
in

let fac = (lambda (n):
  foldl((lambda (x, y): (x, y)), 1, range(1, n+1)))
in

(fac(3), fac(4), fac(5)) 
